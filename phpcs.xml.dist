<?xml version="1.0"?>
<ruleset name="PHP_CodeSniffer_INS">
    <description>Coding standard for PHP files at INS.</description>

    <file>autoload.php</file>
    <file>bin</file>
    <file>scripts</file>
    <file>src</file>
    <file>tests</file>

    <arg name="colors" />
    <arg name="parallel" value="75" />
    <arg name="extensions" value="php" />

    <rule ref="PSR12">
    </rule>

    <rule ref="PEAR.Functions.ValidDefaultValue.NotAtEnd">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Files.LineLength.TooLong">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Formatting.MultipleStatementAlignment">
        <properties>
            <property name="maxPadding" value="0" />
            <property name="error" value="true" />
        </properties>
    </rule>

    <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
        <type>warning</type>
    </rule>

    <rule ref="VariableAnalysis"/>
    <rule ref="VariableAnalysis.CodeAnalysis.VariableAnalysis">
        <type>warning</type>
        <properties>
            <property name="allowUnusedCaughtExceptions" value="true"/>
        </properties>
    </rule>
    <rule ref="VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable">
        <exclude-pattern>/src/Form/*</exclude-pattern>
    </rule>

    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <exclude-pattern>/tests/*</exclude-pattern>
    </rule>
    <rule ref="VariableAnalysis.CodeAnalysis.VariableAnalysis.SelfOutsideClass">
        <exclude-pattern>/tests/*</exclude-pattern>
    </rule>
    <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
        <exclude-pattern>/tests/*</exclude-pattern>
    </rule>


    <rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.TraitUseDeclaration">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.UnusedPrivateElements">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.TraitUseDeclaration">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Commenting.EmptyComment">
        <type>warning</type>
    </rule>
    <!-- SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration -->
    <rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowContinueWithoutIntegerOperandInSwitch">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.ControlStructures.NewWithParentheses">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Functions.UnusedParameter">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine">
        <type>warning</type>
    </rule>
    <!-- SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions -->
    <rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <type>warning</type>
        <properties>
            <property name="searchAnnotations" value="true" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Operators.RequireOnlyStandaloneIncrementAndDecrementOperators">
        <type>warning</type>
    </rule>

    <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration">
        <type>warning</type>
        <properties>
            <property name="allAnnotationsAreUseful" value="true"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration">
        <exclude-pattern>/src/DataFixtures/*</exclude-pattern>
        <exclude-pattern>/src/Entity/*</exclude-pattern>
        <exclude-pattern>/src/Form/*</exclude-pattern>
        <exclude-pattern>/src/Migration/*</exclude-pattern>
        <exclude-pattern>/src/Repository/*</exclude-pattern>
        <exclude-pattern>/src/Seed/*</exclude-pattern>
        <exclude-pattern>/tests/*</exclude-pattern>
    </rule>
     <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingPropertyTypeHint">
        <exclude-pattern>/src/Entity/*</exclude-pattern>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingReturnTypeHint">
        <exclude-pattern>/src/Entity/*</exclude-pattern>
        <exclude-pattern>/src/Repository/*</exclude-pattern>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingTraversableReturnTypeHintSpecification">
        <exclude-pattern>/src/Entity/*</exclude-pattern>
        <exclude-pattern>/src/Repository/*</exclude-pattern>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.UselessConstantTypeHint">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Variables.UselessVariable">
        <type>warning</type>
    </rule>

    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1"/>
        </properties>
    </rule>

    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.Strings.DoubleQuoteUsage"/>
    <rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>

    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
</ruleset>

